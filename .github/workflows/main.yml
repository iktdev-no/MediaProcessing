name: Build Modules

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  pre-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Select jobs
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "job_run_pyMetadata=true" >> "$GITHUB_ENV"
            echo "job_run_commonCode=true" >> "$GITHUB_ENV"
            echo "job_run_reader=true" >> "$GITHUB_ENV"
            echo "job_run_encode=true" >> "$GITHUB_ENV"
          else
            # Checks pyMetadata for changes
            if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} pyMetadata/) ]]; then
              echo "job_run_pyMetadata=true" >> "$GITHUB_ENV"
            else
              echo "job_run_pyMetadata=false" >> "$GITHUB_ENV"
            fi
          
            # Checks CommonCode for changes
            if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} CommonCode/) ]]; then
              echo "job_run_commonCode=true" >> "$GITHUB_ENV"
            else
              echo "job_run_commonCode=false" >> "$GITHUB_ENV"
            fi

            # Checks Reader for changes
            if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} Reader/) ]]; then
              echo "job_run_reader=true" >> "$GITHUB_ENV"
            else
              echo "job_run_reader=false" >> "$GITHUB_ENV"
            fi
          
            # Checks Encode for changes
            if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} Encode/) ]]; then
              echo "job_run_encode=true" >> "$GITHUB_ENV"
            else
              echo "job_run_encode=false" >> "$GITHUB_ENV"
            fi
          fi

  build-commoncode:
    runs-on: ubuntu-latest
    needs: pre-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if code has changed
        id: check-commoncode
        run: |
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} CommonCode/) ]]; then
            echo "::set-output name=skip::false"
          else
            echo "::set-output name=skip::true"
          fi

      - name: Cache CommonCode Gradle dependencies
        if: steps.check-commoncode.outputs.skip == 'false'
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('CommonCode/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build CommonCode
        if: steps.cache-gradle.outputs.cache-hit != 'true'
        run: |
          cd CommonCode 
          chmod +x ./gradlew
          ./gradlew build

  build-encode:
    needs: build-commoncode
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache CommonCode Gradle dependencies
        if: env.job_run_encode == 'true'
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('CommonCode/gradle/wrapper/gradle-wrapper.properties') }}


      - name: Build Encode module
        if: env.job_run_encode == 'true'
        id: build-encode
        run: |
          cd Encode
          chmod +x ./gradlew
          ./gradlew build
          echo "Build completed"


      - name: Generate Docker image tag
        if: env.job_run_encode == 'true'
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        if: env.job_run_encode == 'true'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: env.job_run_encode == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./Encode
          push: true
          tags: |
            bskjon/media-processing--encode:latest
            bskjon/media-processing--encode:${{ github.sha }}
            bskjon/media-processing--encode:${{ steps.docker-tag.outputs.tag }}

  build-reader:
    needs: build-commoncode
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        if: env.job_run_reader == 'true'
        uses: actions/checkout@v2

      - name: Cache CommonCode Gradle dependencies
        if: env.job_run_reader == 'true'
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('CommonCode/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build Reader module
        id: build-reader
        if: env.job_run_reader == 'true'
        run: |
          cd Reader
          chmod +x ./gradlew
          ./gradlew build
          echo "Build completed"

      - name: Generate Docker image tag
        if: env.job_run_reader == 'true'
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        if: env.job_run_reader == 'true'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: env.job_run_reader == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./Reader
          push: true
          tags: |
            bskjon/mediaprocessing-reader:latest
            bskjon/mediaprocessing-reader:${{ github.sha }}
            bskjon/mediaprocessing-reader:${{ steps.docker-tag.outputs.tag }}



  build-pymetadata:
    needs: pre-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        if: env.job_run_pyMetadata == 'true'
        uses: actions/checkout@v2

      - name: Build pyMetadata module
        id: build-pymetadata
        if: env.job_run_pyMetadata == 'true'
        run: |
          if [[ "${{ steps.check-pymetadata.outputs.changed }}" == "true" || "${{ github.event_name }}" == "push" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            cd pyMetadata
            # Add the necessary build steps for your Python module here
            echo "Build completed"
          else
            echo "pyMetadata has not changed. Skipping pyMetadata module build."
            echo "::set-output name=job_skipped::true"
          fi

      - name: Generate Docker image tag
        if: env.job_run_pyMetadata == 'true'
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        if: env.job_run_pyMetadata == 'true'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: env.job_run_pyMetadata == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./pyMetadata
          push: true
          tags: |
            bskjon/mediaprocessing-pymetadata:latest
            bskjon/mediaprocessing-pymetadata:${{ github.sha }}
            bskjon/mediaprocessing-pymetadata:${{ steps.docker-tag.outputs.tag }}
