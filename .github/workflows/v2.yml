name: Build V2

on:
  push:
    branches:
      - v2
  pull_request:
    branches:
      - v2
  workflow_dispatch:


jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
      pyMetadata: ${{ steps.filter.outputs.pyMetadata }}
      coordinator: ${{ steps.filter.outputs.coordinator }}
      processer: ${{ steps.filter.outputs.processer }}
      converter: ${{ steps.filter.outputs.converter }}
      shared: ${{ steps.filter.outputs.shared }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            apps/pyMetadata:
              - 'pyMetadata/**'
            apps/coordinator:
              - 'coordinator/**'
            apps/processer:
              - 'processer/**'
            apps/converter:
              - 'converter/**'
            
            shared:
              - 'shared/**'
      # Step to print the outputs from "pre-check" job
      - name: Print Outputs from pre-check job
        run: |
          echo "Apps"
          echo "app:pyMetadata: ${{ needs.pre-check.outputs.pyMetadata }}"
          echo "app:coordinator: ${{ needs.pre-check.outputs.coordinator }}"
          echo "app:processer: ${{ needs.pre-check.outputs.processer }}"
          echo "app:converter: ${{ needs.pre-check.outputs.converter }}"
          
          echo "Shared"
          echo "shared: ${{ needs.pre-check.outputs.shared }}"
          
  build-shared:
    runs-on: ubuntu-latest
    needs: pre-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Shared code Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('shared/build.gradle.kts') }}

      - name: Build Shared code
        if: steps.cache-gradle.outputs.cache-hit != 'true' || needs.pre-check.outputs.shared == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          chmod +x ./gradlew
          ./gradlew :shared:build --stacktrace --info


  build-processer:
    needs: build-shared
    if: ${{ needs.pre-check.outputs.processer == 'true' || github.event_name == 'workflow_dispatch' || needs.pre-check.outputs.shared == 'true' }}
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Shared Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('shared/build.gradle.kts') }}

      - name: Build Processer module
        id: build-processer
        run: |
          chmod +x ./gradlew
          ./gradlew :apps:processer:build --info
          echo "Build completed"


      - name: Generate Docker image tag
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/processer
          push: true
          tags: |
            bskjon/mediaprocessing-processer:v2-latest
            bskjon/mediaprocessing-processer:v2-${{ github.sha }}
            bskjon/mediaprocessing-processer:v2-${{ steps.docker-tag.outputs.tag }}

  build-converter:
    needs: build-shared
    if: ${{ needs.pre-check.outputs.converter == 'true' || github.event_name == 'workflow_dispatch' || needs.pre-check.outputs.shared == 'true' }}
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Shared Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('shared/build.gradle.kts') }}

      - name: Build Converter module
        id: build-converter
        run: |
          chmod +x ./gradlew
          ./gradlew :apps:converter:build --info
          echo "Build completed"


      - name: Generate Docker image tag
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/converter
          push: true
          tags: |
            bskjon/mediaprocessing-converter:v2-latest
            bskjon/mediaprocessing-converter:v2-${{ github.sha }}
            bskjon/mediaprocessing-converter:v2-${{ steps.docker-tag.outputs.tag }}
            
  build-coordinator:
    needs: build-shared
    if: ${{ needs.pre-check.outputs.coordinator == 'true' || github.event_name == 'workflow_dispatch' || needs.pre-check.outputs.shared == 'true' }}
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Shared Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('shared/build.gradle.kts') }}

      - name: Build Coordinator module
        id: build-coordinator
        run: |
          chmod +x ./gradlew
          ./gradlew :apps:coordinator:build
          echo "Build completed"


      - name: Generate Docker image tag
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/coordinator
          push: true
          tags: |
            bskjon/mediaprocessing-coordinator:v2-latest
            bskjon/mediaprocessing-coordinator:v2-${{ github.sha }}
            bskjon/mediaprocessing-coordinator:v2-${{ steps.docker-tag.outputs.tag }}
            
  build-pymetadata:
    needs: pre-check
    if:  ${{ needs.pre-check.outputs.pyMetadata == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build pyMetadata module
        id: build-pymetadata
        run: |
          if [[ "${{ steps.check-pymetadata.outputs.changed }}" == "true" || "${{ github.event_name }}" == "push" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            cd apps/pyMetadata
            # Add the necessary build steps for your Python module here
            echo "Build completed"
          else
            echo "pyMetadata has not changed. Skipping pyMetadata module build."
            echo "::set-output name=job_skipped::true"
          fi

      - name: Generate Docker image tag
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/pyMetadata
          push: true
          tags: |
            bskjon/mediaprocessing-pymetadata:v2-latest
            bskjon/mediaprocessing-pymetadata:v2-${{ github.sha }}
            bskjon/mediaprocessing-pymetadata:v2-${{ steps.docker-tag.outputs.tag }}